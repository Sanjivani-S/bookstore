## orders-deployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: orders
  template:
    metadata:
      labels:
        app: orders
    spec:
      containers:
      - name: orders-service
        image: sgs1/orders-service:latest
        ports:
        - containerPort: 8001 # Replace with the port used by your orders service
        env: # DONT FORGET THIS. REQUIRED FOR DB CONNECTIVITY
        - name: DB_NAME # POSTGRES_USER
          value: bookstore_db # postgres # replace with your user
        - name: DB_USER  # POSTGRES_PASSWORD
          value: postgres # postgres_password # replace with your password
        - name: DB_PASSWORD # POSTGRES_DB
          value: postgres_password # bookstore_db # replace with your database name
        - name: DB_HOST # hostname for the SERVICE in kubernetes
          value: postgres-host   # localhost - does not work with docker
        - name: DB_PORT # default postgres port
          value: '5432'
---
# apiVersion: v1
# kind: Service
# metadata:
#   name: orders-service
# spec:
#   selector:
#     app: orders
#   ports:
#     - protocol: TCP
#       port: 8001
#       nodePort: 30002
#       name: http
#       targetPort: 8000
#   type: LoadBalancer

apiVersion: v1
kind: Service
metadata:
  name: orders-service
spec:
  type: NodePort
  ports:
    - port: 8002       # Service port
      targetPort: 8000 # Container port - match it with docker-compose/dockerfile
      nodePort: 30002  # NodePort (optional; Kubernetes assigns one if not specified)
  selector:
    app: orders
